@use "sass:math";

$grid-column : 12;
$grid-gap:(
    "0":0,
    "1":10,
    "2":20,
    "3":30,
);
$layout-values:flex-start,flex-end,center,space-between,space-around;
.container{
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
    box-sizing: border-box;
}

.row{
    display: flex;
    flex-flow: row wrap;
}
//gap
@each $key,$val in $grid-gap{
    .gap-#{$key} > *{
        padding: $val;
    }
    .gap-#{$key}{
        margin-left: -$val;
        margin-right: -$val;
    }
}

//justfy content classes
@each $val in $layout-values{
    .justify-#{$val}{
        justify-content: $val;
    }
}

//col
@include xs{
    @for $i from 1 through $grid-column{
        .col-#{$i}-xs{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i *100%,$grid-column);
        }
    }
}
@include sm{
    @for $i from 1 through $grid-column{
        .col-#{$i}-sm{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i *100%,$grid-column);
        }
    }
}
@include md{
    @for $i from 1 through $grid-column{
        .col-#{$i}-md{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i *100%,$grid-column);
        }
    }
}
@include lg{
    @for $i from 1 through $grid-column{
        .col-#{$i}-lg{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i *100%,$grid-column);
        }
    }
}
@include xl{
    @for $i from 1 through $grid-column{
        .col-#{$i}-xl{
            box-sizing: border-box;
            flex-grow: 0;
            width: math.div($i *100%,$grid-column);
        }
    }
}